<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.team.framework</groupId>
  <artifactId>team-framework-root</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <name>Team Java EE application maven projects's root</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>1.8</jdk.version>
    <maven.site.version>3.2</maven.site.version>
    <dependency.scope>compile</dependency.scope>

	<!-- technical components version -->
	<spring.version>4.2.4.RELEASE</spring.version>
	<spring-security.version>4.0.3.RELEASE</spring-security.version>
	<hibernate.version>5.1.0.Final</hibernate.version>
	<aspectj.version>1.8.8</aspectj.version>
	<tomcatplugin.version>8.0.32</tomcatplugin.version>
	<cxf.version>3.1.5</cxf.version>

	<mysql.connector.version>5.1.38</mysql.connector.version>
	<oracle.connector.version>10.2.0.4.0</oracle.connector.version>
	<sqlserver.connector.version>4.0.2206.100</sqlserver.connector.version>
	<hsqldb.connector.version>1.8.0.10</hsqldb.connector.version>
	<jobscheduler.quartz.version>2.2.2</jobscheduler.quartz.version>
	<test.junit.version>4.12</test.junit.version>
  </properties>
  
  	<build>
		<finalName>${project.artifactId}</finalName>

		<!-- specify resouces directory to copy -->
		<resources>
			<resource>
				<directory>${project.build.sourceDirectory}</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>

		<!-- mandatory plugiins -->
		<plugins>
			<!-- unit testing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<!-- compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>${build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- war package -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
					<ignoreWebxml>true</ignoreWebxml>
				</configuration>
			</plugin>

			<!-- Tomcat -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<path>/${project.artifactId}</path>
					<port>8080</port>
				</configuration>
			</plugin>

			<!-- Jetty -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.16.v20140903</version>
				<configuration>
					<webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>
		</plugins>

		<!-- optional plugins, may specify plugins in sub-project's POM -->
		<pluginManagement>
		</pluginManagement>
	</build>
	
	<!-- provide和test scope的包，放在根工程文件中 -->
	<dependencies>
		<!-- below is the dependencies which need to be set 'provided' in scope attitude -->
		<!-- servlet api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- below is the dependencies which need to be set 'test' in scope attitude -->
		<!-- tomcat test tools -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-logging-juli</artifactId>
			<version>${tomcatplugin.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>${tomcatplugin.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
  
  	<!-- 运行Deploy自动 发布到仓库 -->
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Team Internal Releases</name>
			<url>http://192.168.31.218:8081/nexus/content/repositories/releases</url>
		</repository>
		
		<snapshotRepository>
			<id>snapshots</id>
			<name>Team Internal Snapshot</name>
			<url>http://192.168.31.218:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>
